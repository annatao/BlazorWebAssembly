@page "/fetchWeather"
@inject HttpClient Http
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

@if (currentWeather == null)
{
    <p><em>Loading...</em></p>
}
else
{
    var localtime = DateTime.UtcNow.AddSeconds(currentWeather.Timezone);
    <h1>Weather in <b>@currentWeather.Name</b> at local time @localtime</h1>

    <p>This component fetches data from Open Weather Map API.</p>

    var main = currentWeather.Main;
    var wind = currentWeather.Wind;
    var sys = currentWeather.Sys;
    var localizeSunrise = DateTimeOffset.FromUnixTimeSeconds(sys.Sunrise).UtcDateTime.AddSeconds(currentWeather.Timezone);
    var localizeSunset = DateTimeOffset.FromUnixTimeSeconds(sys.Sunset).UtcDateTime.AddSeconds(currentWeather.Timezone);
    <table class="table">
        <tbody>
            <tr>
                <td>Temperature</td>
                <td>@Math.Round(main.Temp, 2) &deg;C</td>
            </tr>
            <tr>
                <td>Feels like</td>
                <td>@Math.Round(main.Feels_Like, 2) &deg;C</td>
            </tr>
            <tr>
                <td>Maximum temperature</td>
                <td>@Math.Round(main.Temp_Max, 2) &deg;C</td>
            </tr>
            <tr>
                <td>Minimum temperature</td>
                <td>@Math.Round(main.Temp_Min, 2) &deg;C</td>
            </tr>
            <tr>
                <td>Humidity</td>
                <td>@main.Humidity %</td>
            </tr>
            <tr>
                <td>Pressure</td>
                <td>@main.Pressure hPa</td>
            </tr>
            <tr>
                <td>Visibility</td>
                <td>@currentWeather.Visibility m</td>
            </tr>
            <tr>
                <td>Wind speed</td>
                <td>@Math.Round(wind.Speed, 2) m/s</td>
            </tr>
            <tr>
                <td>Cloudiness</td>
                <td>@currentWeather.Clouds.All %</td>
            </tr>
            <tr>
                <td>Sunrise</td>
                <td>@localizeSunrise</td>
            </tr>
            <tr>
                <td>Sunset</td>
                <td>@localizeSunset</td>
            </tr>
        </tbody>
    </table>

    <h2>About @currentWeather.Name</h2>

    <table class="table">
        <tbody>
            <tr>
                <td>Coordinate</td>
                <td>@currentWeather.Coord.Lon, @currentWeather.Coord.Lat</td>
            </tr>
            <tr>
                <td>Country code</td>
                <td>@sys.Country</td>
            </tr>
        </tbody>
    </table>
}

@code {
    private CurrentWeather currentWeather;

    protected override async Task OnInitializedAsync()
    {
        var key = Configuration["OpenWeatherMapAPI:Key"];
        var url = String.Format(Configuration["OpenWeatherMapAPI:Url"], key);

        currentWeather = await Http.GetFromJsonAsync<CurrentWeather>(url);
    }

    public class CurrentWeather
    {
        public Coord Coord { get; set; }
        public Weather[] Weather { get; set; }
        public string Base { get; set; }
        public Main Main { get; set; }
        public int Visibility { get; set; }
        public Wind Wind { get; set; }
        public Clouds Clouds { get; set; }
        public int Dt { get; set; }
        public Sys Sys { get; set; }
        public int Timezone { get; set; }
        public int Id { get; set; }
        public string Name { get; set; }
        public int Cod { get; set; }

    }


    public class Coord
    {
        public double Lon { get; set; }
        public double Lat { get; set; }
    }

    public class Weather
    {
        public double Id { get; set; }
        public string Main { get; set; }
        public string Description { get; set; }
        public string Icon { get; set; }
    }

    public class Main
    {
        public double Temp { get; set; }
        public double Feels_Like { get; set; }
        public double Temp_Min { get; set; }
        public double Temp_Max { get; set; }
        public int Pressure { get; set; }
        public int Humidity { get; set; }
    }

    public class Wind
    {
        public double Speed { get; set; }
        public int Deg { get; set; }
        public double Gust { get; set; }
    }

    public class Clouds
    {
        public int All { get; set; }
    }

    public class Sys
    {
        public int Type { get; set; }
        public int Id { get; set; }
        public string Country { get; set; }
        public int Sunrise { get; set; }
        public int Sunset { get; set; }
    }
}
